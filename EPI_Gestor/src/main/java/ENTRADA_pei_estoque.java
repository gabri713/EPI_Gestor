
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author vitor
 */
public class ENTRADA_pei_estoque extends javax.swing.JFrame {
 private SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form ENTRADA_pei_estoque
     */
    public ENTRADA_pei_estoque() {
        initComponents();
        try {
            MaskFormatter maskDataEntrada = new MaskFormatter("##/##/####");
            maskDataEntrada.setPlaceholderCharacter('_');
            maskDataEntrada.install(jFormatted_data_entrada);

            MaskFormatter maskDataValidade = new MaskFormatter("##/##/####");
            maskDataValidade.setPlaceholderCharacter('_');
            maskDataValidade.install(jFormatted_validade);
        } catch (ParseException e) {
            e.printStackTrace();
        }
    
       
    
    }
    
    
     public class DatabaseConnection {
    
    private static final String URL = "jdbc:mysql://localhost:/sistema"; 
    private static final String USER = "root"; 
    private static final String PASSWORD = ""; 

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_mostalistaestoq = new javax.swing.JButton();
        VOLTA_INICIO = new javax.swing.JButton();
        btn_MN_cadastro_F = new javax.swing.JButton();
        cb_estoque = new javax.swing.JComboBox<>();
        cb_relatorios = new javax.swing.JComboBox<>();
        listas = new javax.swing.JComboBox<>();
        TXT_tipoEPI = new javax.swing.JTextField();
        txt_quantidade = new javax.swing.JTextField();
        txt_ID_EPI = new javax.swing.JTextField();
        txt_Fonercedor = new javax.swing.JTextField();
        jFormatted_validade = new javax.swing.JFormattedTextField();
        jFormatted_data_entrada = new javax.swing.JFormattedTextField();
        salva2 = new javax.swing.JButton();
        salvar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_mostalistaestoq.setText("jButton1");
        btn_mostalistaestoq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mostalistaestoqActionPerformed(evt);
            }
        });
        jPanel1.add(btn_mostalistaestoq, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, 190, 30));

        VOLTA_INICIO.setText("jButton1");
        VOLTA_INICIO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VOLTA_INICIOActionPerformed(evt);
            }
        });
        jPanel1.add(VOLTA_INICIO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, 40));

        btn_MN_cadastro_F.setText("jButton2");
        btn_MN_cadastro_F.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MN_cadastro_FActionPerformed(evt);
            }
        });
        jPanel1.add(btn_MN_cadastro_F, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, -1, 50));

        cb_estoque.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vis√£o Geral", "Entrada de epis", "Epi para funcionarios", " " }));
        cb_estoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_estoqueActionPerformed(evt);
            }
        });
        jPanel1.add(cb_estoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 180, 170, 60));

        cb_relatorios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Relatorio do Estoque", "Relatorio de  Entrega" }));
        cb_relatorios.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cb_relatoriosAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cb_relatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_relatoriosActionPerformed(evt);
            }
        });
        jPanel1.add(cb_relatorios, new org.netbeans.lib.awtextra.AbsoluteConstraints(-70, 290, -1, 70));

        listas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EPI em Estoque", "Funcionarios  Cadastrados", "EPI Entregue", " " }));
        listas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listasActionPerformed(evt);
            }
        });
        jPanel1.add(listas, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 390, -1, 70));

        TXT_tipoEPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_tipoEPIActionPerformed(evt);
            }
        });
        jPanel1.add(TXT_tipoEPI, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 162, 220, 30));

        txt_quantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_quantidadeActionPerformed(evt);
            }
        });
        jPanel1.add(txt_quantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(501, 160, 250, -1));

        txt_ID_EPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ID_EPIActionPerformed(evt);
            }
        });
        jPanel1.add(txt_ID_EPI, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 230, -1));

        txt_Fonercedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_FonercedorActionPerformed(evt);
            }
        });
        jPanel1.add(txt_Fonercedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 230, -1));

        jFormatted_validade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormatted_validadeActionPerformed(evt);
            }
        });
        jPanel1.add(jFormatted_validade, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, 230, -1));

        jFormatted_data_entrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormatted_data_entradaActionPerformed(evt);
            }
        });
        jPanel1.add(jFormatted_data_entrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, 220, -1));

        salva2.setText("salvar");
        salva2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salva2ActionPerformed(evt);
            }
        });
        jPanel1.add(salva2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 450, -1, -1));

        salvar.setIcon(new javax.swing.ImageIcon("C:\\Users\\vitor\\Desktop\\EPI_gestor\\EPI_Gestor\\EPI_Gestor\\src\\main\\java\\com\\telas\\epi_gestor\\telas\\ENTRADA_FUNCIONARIO.png")); // NOI18N
        salvar.setText("jLabel1");
        jPanel1.add(salvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 510));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_mostalistaestoqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mostalistaestoqActionPerformed
           LISTA_EPI_EMESTOQUE listaemEStoque = new LISTA_EPI_EMESTOQUE();
        listaemEStoque.setVisible(true);
        listaemEStoque.preencherTabela2();
    }//GEN-LAST:event_btn_mostalistaestoqActionPerformed

    private void VOLTA_INICIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VOLTA_INICIOActionPerformed
        ENTRADA_pei_estoque.this.dispose();
        MENU  VOLTA_INICIO = new MENU();
        VOLTA_INICIO.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_VOLTA_INICIOActionPerformed

    private void btn_MN_cadastro_FActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MN_cadastro_FActionPerformed
        // TODO add your handling code here:
        ENTRADA_pei_estoque.this.dispose();
        CADAStro_FUNCIONARIOS btn_MN_cadastro_F = new CADAStro_FUNCIONARIOS();
        btn_MN_cadastro_F.setVisible(true);
    }//GEN-LAST:event_btn_MN_cadastro_FActionPerformed

    private void cb_estoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_estoqueActionPerformed
        String selectedOption = (String) cb_estoque.getSelectedItem();

        if ("Vis√£o Geral".equals(selectedOption)) {
            ENTRADA_pei_estoque.this.dispose();
            VISAO_GERAL_ESTOQUE VisaoGeralEstoque = new VISAO_GERAL_ESTOQUE();
            VisaoGeralEstoque.setVisible(true);
        
        }
    }//GEN-LAST:event_cb_estoqueActionPerformed

    private void cb_relatoriosAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cb_relatoriosAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_relatoriosAncestorAdded

    private void cb_relatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_relatoriosActionPerformed
        // TODO add your handling code here:
        String selectedOption = (String)  cb_relatorios.getSelectedItem();

        if ("Relatorio do Estoque".equals(selectedOption)) {
            ENTRADA_pei_estoque.this.dispose();
            RELATORIO_ESTOQUE relatorioEstoque = new RELATORIO_ESTOQUE();
            relatorioEstoque.setVisible(true);
        } else if ("Relatorio de  Entrega".equals(selectedOption)) {
            ENTRADA_pei_estoque.this.dispose();
            RELATORIO_ENTREGA_FUNCIONARIO EntregaEpiEstoque = new RELATORIO_ENTREGA_FUNCIONARIO();
            EntregaEpiEstoque.setVisible(true);
        }
    }//GEN-LAST:event_cb_relatoriosActionPerformed

    private void listasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listasActionPerformed
        // TODO add your handling code here:
        String selectedOption = (String)listas.getSelectedItem();

        if ("EPI em Estoque".equals(selectedOption)) {
            ENTRADA_pei_estoque.this.dispose();
            LISTA_EPI_EMESTOQUE listaEstoque = new LISTA_EPI_EMESTOQUE();
            listaEstoque.setVisible(true);
        } else if ("Funcionarios  Cadastrados".equals(selectedOption)) {
            ENTRADA_pei_estoque.this.dispose();
            LISTA_FUNCIONARIOS lisEpiEntrgue = new LISTA_FUNCIONARIOS();
            lisEpiEntrgue.setVisible(true);
        } else if ("EPI Entregue".equals(selectedOption)) {
            ENTRADA_pei_estoque.this.dispose();
            EPI_ENTREGUE lisEpiEntrgue = new EPI_ENTREGUE();
            lisEpiEntrgue.setVisible(true);
        }
    }//GEN-LAST:event_listasActionPerformed

    private void TXT_tipoEPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_tipoEPIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_tipoEPIActionPerformed

    private void txt_quantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_quantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_quantidadeActionPerformed

    private void txt_ID_EPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ID_EPIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ID_EPIActionPerformed

    private void txt_FonercedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_FonercedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_FonercedorActionPerformed

    private void jFormatted_data_entradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormatted_data_entradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormatted_data_entradaActionPerformed

    private void jFormatted_validadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormatted_validadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormatted_validadeActionPerformed

    private void salva2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salva2ActionPerformed
    
   String tipoEPI = TXT_tipoEPI.getText();
    String quantidade = txt_quantidade.getText();
    String idEPI = txt_ID_EPI.getText();
    String fornecedor = txt_Fonercedor.getText();

    // Captura as datas formatadas
    Date dt_entrada = null;
    Date validade = null;

    try {
        dt_entrada = formatoData.parse(jFormatted_data_entrada.getText());
        validade = formatoData.parse(jFormatted_validade.getText());
    } catch (ParseException e) {
        JOptionPane.showMessageDialog(this, "Por favor, insira datas v√°lidas no formato dd/MM/yyyy.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Valida√ß√£o: Verificar se algum campo est√° vazio
    if (tipoEPI.isEmpty() || quantidade.isEmpty() || idEPI.isEmpty() || fornecedor.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos os campos devem ser preenchidos.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verifica se o ID do EPI √© um n√∫mero v√°lido
    try {
        int idEpiInt = Integer.parseInt(idEPI); // Tentativa de converter para inteiro
        if (idEpiInt <= 0) {
            JOptionPane.showMessageDialog(this, "ID do EPI deve ser um n√∫mero maior que zero.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

       try {
           // Verificar se o ID do EPI j√° existe no banco de dados
           if (idEPIJaCadastrado(idEpiInt)) {
               JOptionPane.showMessageDialog(this, "ID do EPI j√° cadastrado.", "Erro", JOptionPane.ERROR_MESSAGE);
               return;
           }
       } catch (SQLException ex) {
           Logger.getLogger(ENTRADA_pei_estoque.class.getName()).log(Level.SEVERE, null, ex);
       }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "ID do EPI deve ser um n√∫mero v√°lido.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verifica se a quantidade √© um n√∫mero v√°lido
    try {
        int quantidadeInt = Integer.parseInt(quantidade); // Tentativa de converter para inteiro
        if (quantidadeInt <= 0) {
            JOptionPane.showMessageDialog(this, "A quantidade deve ser um n√∫mero maior que zero.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "A quantidade deve ser um n√∫mero v√°lido.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verifica a validade da data
    if (validade.before(dt_entrada)) {
        JOptionPane.showMessageDialog(this, "A data de validade deve ser posterior √† data de entrada.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        Connection con = DatabaseConnection.getConnection();
        
        // Verifica se o ID do EPI j√° est√° cadastrado
        if (idEPIJaCadastrado(Integer.parseInt(idEPI))) {
            JOptionPane.showMessageDialog(this, "ID do EPI j√° cadastrado.", "Erro", JOptionPane.ERROR_MESSAGE);
            con.close();
            return;
        }

        String sql = "INSERT INTO EntradaEPI (id_epi, validade, tipo_epi, quantidade, fornecedor, dt_entrada) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement stmt = con.prepareStatement(sql);

        // Define os par√¢metros do PreparedStatement
        stmt.setInt(1, Integer.parseInt(idEPI)); // id_epi
        stmt.setDate(2, new java.sql.Date(validade.getTime())); // validade
        stmt.setString(3, tipoEPI); // tipo_epi
        stmt.setInt(4, Integer.parseInt(quantidade)); // quantidade
        stmt.setString(5, fornecedor); // fornecedor
        stmt.setDate(6, new java.sql.Date(dt_entrada.getTime())); // dt_entrada

        // Executa o comando SQL
        int rowsAffected = stmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "EPI cadastrado com sucesso.");
            limparCampos(); // Limpa os campos somente ap√≥s o cadastro ser bem-sucedido
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar EPI.", "Erro", JOptionPane.ERROR_MESSAGE);
        }

        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

private boolean idEPIJaCadastrado(int idEPI) throws SQLException {
    Connection con = DatabaseConnection.getConnection();
    String sql = "SELECT id_epi FROM EntradaEPI WHERE id_epi = ?";
    PreparedStatement stmt = con.prepareStatement(sql);
    stmt.setInt(1, idEPI);
    ResultSet rs = stmt.executeQuery();
    boolean cadastrado = rs.next(); // Se existir algum resultado, j√° est√° cadastrado
    con.close();
    return cadastrado;
}

private void limparCampos() {
    TXT_tipoEPI.setText("");
    txt_quantidade.setText("");
    txt_ID_EPI.setText("");
    txt_Fonercedor.setText("");
    jFormatted_data_entrada.setValue(null);
    jFormatted_validade.setValue(null);

    
    }//GEN-LAST:event_salva2ActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ENTRADA_pei_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ENTRADA_pei_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ENTRADA_pei_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ENTRADA_pei_estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ENTRADA_pei_estoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TXT_tipoEPI;
    private javax.swing.JButton VOLTA_INICIO;
    private javax.swing.JButton btn_MN_cadastro_F;
    private javax.swing.JButton btn_mostalistaestoq;
    private javax.swing.JComboBox<String> cb_estoque;
    private javax.swing.JComboBox<String> cb_relatorios;
    private javax.swing.JFormattedTextField jFormatted_data_entrada;
    private javax.swing.JFormattedTextField jFormatted_validade;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> listas;
    private javax.swing.JButton salva2;
    private javax.swing.JLabel salvar;
    private javax.swing.JTextField txt_Fonercedor;
    private javax.swing.JTextField txt_ID_EPI;
    private javax.swing.JTextField txt_quantidade;
    // End of variables declaration//GEN-END:variables

    
}
