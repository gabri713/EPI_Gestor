
import static com.mysql.cj.conf.PropertyKey.PASSWORD;
import static com.mysql.cj.conf.PropertyKey.USER;
import java.net.URL;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author vcasotti
 */
public class CRIA_CONTA extends javax.swing.JFrame {  
    private final String URL = "jdbc:mysql://localhost:/sistema";
        private final String USER = "root";
        private final String PASSWORD = "";
        
        public Connection getConnection() throws SQLException {
            return DriverManager.getConnection(URL, USER, PASSWORD);
        }
    
    /**
     * Creates new form CRIA_CONTA
     */
    public CRIA_CONTA() {
        initComponents();
txt_nome.setBackground (new java.awt.Color(0,0,0,1));
TXT_email.setBackground (new java.awt.Color(0,0,0,1));
jFormattedTextField1.setBackground (new java.awt.Color(0,0,0,1));
psf_senha.setBackground (new java.awt.Color(0,0,0,1));
btn_criar.setBackground (new java.awt.Color(0,0,0,0));
jButton1.setBackground (new java.awt.Color(0,0,0,0));
          try {
    // Máscara para data de entrada
    MaskFormatter maskData = new MaskFormatter("##/##/####");
    maskData.setPlaceholderCharacter('_');

    // Aplica a máscara aos dois campos
    maskData.install( jFormattedTextField1);
    
} catch (ParseException ex) {
    Logger.getLogger(CRIA_CONTA.class.getName()).log(Level.SEVERE, null, ex);
}
    }
    
    
        
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_nome = new javax.swing.JTextField();
        TXT_email = new javax.swing.JTextField();
        psf_senha = new javax.swing.JPasswordField();
        btn_criar = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        txt_data = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_nome.setBorder(null);
        jPanel1.add(txt_nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 132, 190, 30));

        TXT_email.setBorder(null);
        TXT_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_emailActionPerformed(evt);
            }
        });
        jPanel1.add(TXT_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 190, 20));

        psf_senha.setBorder(null);
        jPanel1.add(psf_senha, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, 190, 20));

        btn_criar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_criarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_criar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 370, 100, 20));

        jFormattedTextField1.setBorder(null);
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jFormattedTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 190, 20));

        jButton1.setText("jButton1");
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, 100, -1));

        txt_data.setIcon(new javax.swing.ImageIcon("D:\\Users\\vcasotti\\Desktop\\Nova pasta\\EPI_Gestor\\EPI_Gestor\\src\\main\\java\\com\\telas\\epi_gestor\\telas\\TELA_cria conta.png")); // NOI18N
        txt_data.setText("jLabel1");
        jPanel1.add(txt_data, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 820, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_criarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_criarActionPerformed
        String nome = txt_nome.getText();
    String email = TXT_email.getText();
    String senha = new String(psf_senha.getPassword());
    String data = jFormattedTextField1.getText();

    if (nome.isEmpty() || email.isEmpty() || senha.isEmpty() || data.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos os campos devem ser preenchidos.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validação do email
    String emailPattern = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$";
    if (!Pattern.matches(emailPattern, email)) {
        JOptionPane.showMessageDialog(this, "Por favor, insira um email válido.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validação da data de nascimento
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    dateFormat.setLenient(false);
    java.util.Date dateOfBirth;
    try {
        dateOfBirth = dateFormat.parse(data);
    } catch (ParseException e) {
        JOptionPane.showMessageDialog(this, "Por favor, insira uma data de nascimento válida no formato dd/MM/yyyy.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try (Connection conn = getConnection()) {
        // Verifica se o email já está cadastrado
        String checkEmailSql = "SELECT COUNT(*) FROM usuarios WHERE email = ?";
        try (PreparedStatement checkEmailStmt = conn.prepareStatement(checkEmailSql)) {
            checkEmailStmt.setString(1, email);
            ResultSet rs = checkEmailStmt.executeQuery();
            if (rs.next() && rs.getInt(1) > 0) {
                JOptionPane.showMessageDialog(this, "Usuário já cadastrado com este email.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // Inserir novo usuário
        String sql = "INSERT INTO usuarios (nome, email, data_nascimento, senha) VALUES (?, ?, ?, ?)";
        try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, nome);
            pstmt.setString(2, email);
            pstmt.setDate(3, new java.sql.Date(dateOfBirth.getTime()));
            pstmt.setString(4, senha);

            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Conta criada com sucesso!");

            LOGIN logar = new LOGIN();
            logar.setVisible(true);
            this.dispose();
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao criar conta: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }

                                           

    }//GEN-LAST:event_btn_criarActionPerformed

    private void TXT_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_emailActionPerformed

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRIA_CONTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRIA_CONTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRIA_CONTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRIA_CONTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRIA_CONTA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TXT_email;
    private javax.swing.JButton btn_criar;
    private javax.swing.JButton jButton1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField psf_senha;
    private javax.swing.JLabel txt_data;
    private javax.swing.JTextField txt_nome;
    // End of variables declaration//GEN-END:variables
}
